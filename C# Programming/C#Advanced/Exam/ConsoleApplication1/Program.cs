using System;
using System.Numerics;

namespace ConsoleApplication1
{
    class Program
    {

        static string[] hint = 
{
    "200", "303", "315", "52", "301", "241", "302", "321", "52", "244", "253", "251",
    "253", "312", "311", "52", "244", "303", "245", "311", "52", "312", "252", "253",
    "311", "52", "302", "313", "301", "245", "310", "241", "300", "52", "311", "321",
    "311", "312", "245", "301", "52", "252", "241", "314", "245", "143", "52", "201",
    "311", "52", "312", "252", "245", "310", "245", "52", "241", "302", "52", "241",
    "304", "304", "310", "303", "304", "310", "253", "241", "312", "245", "52", "242",
    "313", "253", "300", "312", "113", "253", "302", "52", "250", "313", "302", "243",
    "312", "253", "303", "302", "241", "300", "253", "312", "321", "143", "21", "14",
    "215", "312", "310", "253", "302", "251", "114", "214", "245", "304", "300", "241",
    "243", "245", "52", "243", "241", "302", "52", "311", "253","301", "304", "300",
    "253", "250", "321", "52", "312", "252", "253", "302", "251", "311", "52", "241",
    "52", "300", "303", "312", "112", "52", "254", "313", "311", "312", "52", "242",
    "245", "52", "243", "241", "310", "245", "250", "313", "300", "52", "253", "302",
    "52", "315", "252", "241", "312", "52", "303", "310","244", "245", "310", "52",
    "321", "303", "313", "52", "310", "245", "304", "300", "241", "243", "245", "21",
    "14", "220", "252", "253", "302", "255", "52", "241", "242", "303", "313", "312",
    "52", "312", "252", "245", "52", "244", "241", "312", "241", "52", "312", "321",
    "304", "245", "311", "52", "303", "250", "52", "312", "252", "245", "52", "312",
    "252", "310", "245", "245", "52", "302", "313", "301", "242", "245", "310", "311",
    "52", "241", "302", "244", "52", "312", "252", "245", "52", "310", "245", "311",
    "313", "300", "312", "52", "113", "52", "252", "303", "315", "52", "301", "313",
    "243", "252", "52", "253", "311", "52", "122", "234", "130", "120", "52", "110",
    "52", "122", "234", "130", "120", "52", "110", "52", "122", "234", "130", "120", "143"
};

        static void Main()
        {
            //char decimalNumber;

            //for (int i = 0; i < hint.Length; i++)
            //{
            //    decimalNumber = FromBaseSixToDecimal(hint[i]);
            //    Console.Write(decimalNumber);
            //}


            string[] numbers = Console.ReadLine().Split(new string[] { ", " }, StringSplitOptions.None);
            BigInteger product = new BigInteger(1);

            foreach (var functionalNumber in numbers)
            {
                var hexNumber = functionalNumber
                                    .Replace("commonlisp", "D")
                                    .Replace("standardml", "9")
                                    .Replace("haskell", "1")
                                    .Replace("mercury", "C")
                                    .Replace("clojure", "7")
                                    .Replace("erlang", "8")
                                    .Replace("scheme", "E")
                                    .Replace("racket", "A")
                                    .Replace("curry", "F")
                                    .Replace("ocaml", "0")
                                    .Replace("scala", "2")
                                    .Replace("lisp", "4")
                                    .Replace("rust", "5")
                                    .Replace("elm", "B")
                                    .Replace("ml", "6")
                                    .Replace("f#", "3");

                product *= new BigInteger(Convert.ToInt64(hexNumber, 16));
            }

            Console.WriteLine(product);

        }
        
        static char FromBaseSixToDecimal(string number)
        {
            ulong result = 0;
            foreach (char digit in number)
            {
                if (char.IsDigit(digit))
                {
                    result = result* (ulong)6 + digit - '0';
                }
                else
                {
                    result = result* (ulong)6 + (ulong)(digit - 'A' + 10);
                }
             
            }
            return (char)result;
        }

    }
}
